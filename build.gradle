buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "${mod_version}"
group = "yeelp.distinctdamagedescriptions" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "distinctdamagedescriptions"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: mappings_channel, version: mappings_version
}

sourceSets.main.java.srcDirs += 'java'
sourceSets.test.java.srcDirs += 'java'

repositories {
    mavenCentral()
    maven {
        url "https://cursemaven.com"
    }
    maven {
        name = "CraftTweaker/ContentTweaker"
        url = "https://maven.blamejared.com"
    }
    maven {
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf("CraftTweaker2:CraftTweaker2-API:4.1.20.674")
    implementation fg.deobf("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.20.674")
    implementation fg.deobf("CraftTweaker2:ZenScript:4.1.20.674")
    implementation fg.deobf("com.teamacronymcoders:ContentTweaker:1.12.2-4.9.1")
    implementation fg.deobf("com.teamacronymcoders.base:base:1.12.2-3.11.0")
    implementation fg.deobf("slimeknights.mantle:Mantle:1.12-1.3.3.55")
    implementation fg.deobf("slimeknights:TConstruct:1.12.2-2.13.0.183")
    //deobfProvided "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2:api"
    implementation fg.deobf("curse.maven:hwyla-253449:2568751")
    implementation fg.deobf("curse.maven:lycanitesmobs-224770:3649418")
    implementation fg.deobf("curse.maven:tetra-289712:2815271")
    implementation fg.deobf("curse.maven:conarm-287683:3174535")
    implementation fg.deobf("curse.maven:spartanweaponry-278141:3634012")
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
    testImplementation 'org.mockito:mockito-inline:2.8.9'
    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation 'net.bytebuddy:byte-buddy:1.10.19'
    testImplementation 'net.bytebuddy:byte-buddy-agent:1.10.19'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
    
    shadow 'io.github.llamalad7:mixinextras-common:0.3.5'

    shadow 'org.spongepowered:mixin:0.8.5'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, "mixins.${mod_id}.refmap.json"
}

processResources {
    filesMatching("ModConsts.java") {
        expand "version" : project.version
    }
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft_version
    
    filesMatching('mcmod.info') {
        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': minecraft_version, 'mod_description': mod_description,
                'mod_author': mod_author
    }
    
    filesMatching('example/**.json') {
        expand 'version':project.version
    }
}

//java {
//    withSourcesJar()
//}

shadowJar {
    configurations = [project.configurations.shadow]
    mergeServiceFiles()

    exclude 'org/spongepowered/asm/launch/MixinLaunchPlugin*'
    exclude 'org/spongepowered/asm/launch/MixinTransformationService*'
    exclude 'org/spongepowered/asm/launch/platform/container/ContainerHandleModLauncherEx*'
    
    exclude 'LICENSE.txt'

    archiveClassifier.set('')
}

reobf {
    shadowJar {}
}
  
jar {
    manifest.attributes(
        "Specification-Title"     : mod_name,
        "Specification-Version"   : "1",
        "Implementation-Title"    : mod_name,
        "Implementation-Version"  : mod_version,
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        "FMLCorePlugin": "${mixin_loader_class}",
        "FMLCorePluginContainsFMLMod": "true",
        "ForceLoadAsMod": "true", 
        "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
        "TweakOrder": 0,
    )
    
    archiveClassifier.set('THIN')
}
build.dependsOn(shadowJar)
jar.finalizedBy('reobfJar')
